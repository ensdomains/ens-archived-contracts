{
  "contractName": "ENSMigrationSubdomainRegistrar",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ENS",
          "name": "ens",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "DomainConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "DomainTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "DomainUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NewRegistration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "RentPaid",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TLD_NODE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "referralFeePPM",
          "type": "uint256"
        }
      ],
      "name": "configureDomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "referralFeePPM",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_transfer",
          "type": "address"
        }
      ],
      "name": "configureDomainFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "migration",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "payRent",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "referralFeePPM",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_subdomainOwner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registrarOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "subdomain",
          "type": "string"
        }
      ],
      "name": "rentDue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_migration",
          "type": "address"
        }
      ],
      "name": "setMigrationAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "unlistDomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "label",
          "type": "bytes32"
        }
      ],
      "name": "migrateSubdomain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ENS\",\"name\":\"ens\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"DomainConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"DomainTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"DomainUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"RentPaid\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"TLD_NODE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeePPM\",\"type\":\"uint256\"}],\"name\":\"configureDomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeePPM\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transfer\",\"type\":\"address\"}],\"name\":\"configureDomainFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"migrateSubdomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migration\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"payRent\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"query\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeePPM\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_subdomainOwner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrarOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"subdomain\",\"type\":\"string\"}],\"name\":\"rentDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migration\",\"type\":\"address\"}],\"name\":\"setMigrationAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"unlistDomain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements an ENS registrar that sells subdomains on behalf of their owners. * Users may register a subdomain by calling `register` with the name of the domain they wish to register under, and the label hash of the subdomain they want to register. They must also specify the new owner of the domain, and the referrer, who is paid an optional finder's fee. The registrar then configures a simple default resolver, which resolves `addr` lookups to the new owner, and sets the `owner` account as the owner of the subdomain in ENS. * New domains may be added by calling `configureDomain`, then transferring ownership in the ENS registry to this contract. Ownership in the contract may be transferred using `transfer`, and a domain may be unlisted for sale using `unlistDomain`. There is (deliberately) no way to recover ownership in ENS once the name is transferred to this registrar. * Critically, this contract does not check one key property of a listed domain: * - Is the name UTS46 normalised? * User applications MUST check these two elements for each domain before offering them to users for registration. * Applications should additionally check that the domains they are offering to register are controlled by this registrar, since calls to `register` will fail if this is not the case.\",\"methods\":{\"configureDomain(string,uint256,uint256)\":{\"details\":\"Configures a domain for sale.\",\"params\":{\"name\":\"The name to configure.\",\"price\":\"The price in wei to charge for subdomain registrations\",\"referralFeePPM\":\"The referral fee to offer, in parts per million\"}},\"configureDomainFor(string,uint256,uint256,address,address)\":{\"details\":\"Configures a domain, optionally transferring it to a new owner.\",\"params\":{\"_owner\":\"The address to assign ownership of this domain to.\",\"_transfer\":\"The address to set as the transfer address for the name       when the permanent registrar is replaced. Can only be set to a non-zero       value once.\",\"name\":\"The name to configure.\",\"price\":\"The price in wei to charge for subdomain registrations.\",\"referralFeePPM\":\"The referral fee to offer, in parts per million.\"}},\"migrate(string)\":{\"details\":\"Migrates the domain to a new registrar.\",\"params\":{\"name\":\"The name of the domain to migrate.\"}},\"owner(bytes32)\":{\"details\":\"owner returns the address of the account that controls a domain.     Initially this is a null address. If the name has been     transferred to this contract, then the internal mapping is consulted     to determine who controls it. If the owner is not set,     the owner of the domain in the Registrar is returned.\",\"params\":{\"label\":\"The label hash of the deed to check.\"},\"return\":\"The address owning the deed.\"},\"query(bytes32,string)\":{\"details\":\"Returns information about a subdomain.\",\"params\":{\"label\":\"The label hash for the domain.\",\"subdomain\":\"The label for the subdomain.\"},\"return\":\"domain The name of the domain, or an empty string if the subdomain               is unavailable.price The price to register a subdomain, in wei.rent The rent to retain a subdomain, in wei per second.referralFeePPM The referral fee for the dapp, in ppm.\"},\"register(bytes32,string,address,address,address)\":{\"details\":\"Registers a subdomain.\",\"params\":{\"_subdomainOwner\":\"The account that should own the newly configured subdomain.\",\"label\":\"The label hash of the domain to register a subdomain of.\",\"referrer\":\"The address of the account to receive the referral fee.\",\"subdomain\":\"The desired subdomain label.\"}},\"setMigrationAddress(address)\":{\"details\":\"Sets the address where domains are migrated to.\",\"params\":{\"_migration\":\"Address of the new registrar.\"}},\"setResolver(string,address)\":{\"details\":\"Sets the resolver record for a name in ENS.\",\"params\":{\"name\":\"The name to set the resolver for.\",\"resolver\":\"The address of the resolver\"}},\"stop()\":{\"details\":\"Stops the registrar, disabling configuring of new domains.\"},\"transfer(string,address)\":{\"details\":\"Transfers internal control of a name to a new account. Does not update     ENS.\",\"params\":{\"name\":\"The name to transfer.\",\"newOwner\":\"The address of the new owner.\"}},\"unlistDomain(string)\":{\"details\":\"Unlists a domain May only be called by the owner.\",\"params\":{\"name\":\"The name of the domain to unlist.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/makoto/work/ens/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol\":\"ENSMigrationSubdomainRegistrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/makoto/work/ens/subdomain-registrar/contracts/AbstractSubdomainRegistrar.sol\":{\"keccak256\":\"0x956a877538a83f7f4479a3e98d0918cfd1834440329780f67f0cd9ed399fb488\",\"urls\":[\"bzz-raw://47a2599288ae69dc111e7d32170e1aebb73e12747d85bd577e766772aed88577\",\"dweb:/ipfs/QmPXVqDeZXnYr9DW63YH4yDJVwMi7F38uEMTAnX5BTKH2A\"]},\"/Users/makoto/work/ens/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol\":{\"keccak256\":\"0x26e066371d73e0895286fd4a62c156c88508e1df2b5fe81fed6c1908931eeb17\",\"urls\":[\"bzz-raw://68f33745a83069856d23810a62f7b3492e278f8f32760b5a051973b8fd4e94ba\",\"dweb:/ipfs/QmX6V9vQU3kuv7UjwvAxxBht9cUV7orUf5L9XWgFeKCDQZ\"]},\"/Users/makoto/work/ens/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol\":{\"keccak256\":\"0x7438e23612da3a7c3cdba5636d0e5d6c70703af4d22ae3cc90ec6a5a26612fa1\",\"urls\":[\"bzz-raw://70e5a4824e7f0b2a74cbccda94c4fb33a79065794a41becc404e57d4d2127b48\",\"dweb:/ipfs/Qma9QGGr3chYJ7FXHWMni29wvnXbok9eNJEzQMU9XgjTar\"]},\"/Users/makoto/work/ens/subdomain-registrar/contracts/RegistrarInterface.sol\":{\"keccak256\":\"0x32eb0addc992b12a37b1fa94a5666bd540037419a3c02d2ba7537b556503d810\",\"urls\":[\"bzz-raw://c7da50663daa8678c844584ca7cf45edc0cf8139686051e1aab079c94027bb10\",\"dweb:/ipfs/Qmd8s5aQg98KyXXn4tEqyFDnTozwRQEBChZxWvwEGu5QJi\"]},\"/Users/makoto/work/ens/subdomain-registrar/contracts/Resolver.sol\":{\"keccak256\":\"0x4da4417de1daf1d66ee092b3cae0aeee2b5c591bfe881b006f80d2c4e582b790\",\"urls\":[\"bzz-raw://8b0c70eef6d5b9d2d6cda5b0849e2d6336ad395616e90673e61c5a73be66c29c\",\"dweb:/ipfs/QmYZWJDsgw284zSRztKu8jT5yPLPU7ySh9i3agWsnRd9Zw\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzz-raw://b3de1882a4a1a1b13c27ee6dc04cc58c34ac392c80cad507de2cdfa8c02712fe\",\"dweb:/ipfs/QmeKcaBF8QdJjXiqFrPJkAtK3et5kUL8XJrnHjwhAThRMT\"]},\"@ensdomains/ethregistrar/contracts/BaseRegistrar.sol\":{\"keccak256\":\"0x8f8f496603d868fdf3ddf31c54fb6eed6a865f2adbf568fe0b3d999d4fa667f4\",\"urls\":[\"bzz-raw://40c16e89553e4af1dad651bdb63208f5e20429e0e5dbd716eb0cad14eafb96be\",\"dweb:/ipfs/QmYdCBZHRwRgKPRmCvghw7hbdvqqcJJCKg5JTtzWWwoSQP\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzz-raw://35e7d742ee71461779df12a0ab1ad4701144d98eb6401182838c8daf40b008dd\",\"dweb:/ipfs/QmY4t7pxcX2cfk6VsGJWZLBgoKMpRctY8X1HPxykLjptSi\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzz-raw://31e4d99091a83a42a6ea14d74ceae2ec3ffb2905c7ee07358875af72ea188333\",\"dweb:/ipfs/Qmf7nHc6BwhbyawapCVRZHzhBHNoA8ftpQWmGSyToVKVzN\"]}},\"version\":1}",
  "bytecode": "0x608060405260008060006101000a81548160ff0219169083151502179055503480156200002b57600080fd5b506040516200308138038062003081833981810160405260208110156200005157600080fd5b8101908080519060200190929190505050808080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200013c57600080fd5b505afa15801562000151573d6000803e3d6000fd5b505050506040513d60208110156200016857600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050612e74806200020d6000396000f3fe6080604052600436106101355760003560e01c8063660b7ad5116100ab578063cb01a9bf1161006f578063cb01a9bf146108df578063cf77525514610962578063da1fe7d514610a7e578063e34e788914610b5a578063f2fde38b14610c22578063fbf58b3e14610c7357610135565b8063660b7ad514610631578063733ccaba146106d557806375f12b21146107bd57806396df3540146107ec578063c9c5b5b41461081757610135565b80631cb82d79116100fd5780631cb82d79146102da5780632b20e397146103315780632eef3d65146103885780633f15457f146104a65780634254b155146104fd5780634732a7dc146105e057610135565b806301ffc9a71461013a57806302571be3146101ac57806307da68f51461022757806311fb13351461023e5780631705a3bd14610283575b600080fd5b34801561014657600080fd5b506101926004803603602081101561015d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d5b565b604051808215151515815260200191505060405180910390f35b3480156101b857600080fd5b506101e5600480360360208110156101cf57600080fd5b8101908080359060200190929190505050610dbd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c610f1f565b005b34801561024a57600080fd5b506102816004803603604081101561026157600080fd5b810190808035906020019092919080359060200190929190505050610fae565b005b34801561028f57600080fd5b50610298611355565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e657600080fd5b506102ef61137b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033d57600080fd5b506103466113a1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039457600080fd5b50610416600480360360408110156103ab57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d257600080fd5b8201836020820111156103e457600080fd5b8035906020019184600183028401116401000000008311171561040657600080fd5b90919293919293905050506113c7565b6040518080602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561046857808201518184015260208101905061044d565b50505050905090810190601f1680156104955780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156104b257600080fd5b506104bb611660565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105de600480360360a081101561051357600080fd5b81019080803590602001909291908035906020019064010000000081111561053a57600080fd5b82018360208201111561054c57600080fd5b8035906020019184600183028401116401000000008311171561056e57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611686565b005b3480156105ec57600080fd5b5061062f6004803603602081101561060357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ba3565b005b34801561063d57600080fd5b506106bf6004803603604081101561065457600080fd5b81019080803590602001909291908035906020019064010000000081111561067b57600080fd5b82018360208201111561068d57600080fd5b803590602001918460018302840111640100000000831117156106af57600080fd5b9091929391929390505050611c59565b6040518082815260200191505060405180910390f35b3480156106e157600080fd5b506107bb600480360360408110156106f857600080fd5b810190808035906020019064010000000081111561071557600080fd5b82018360208201111561072757600080fd5b8035906020019184600183028401116401000000008311171561074957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c85565b005b3480156107c957600080fd5b506107d2611df7565b604051808215151515815260200191505060405180910390f35b3480156107f857600080fd5b50610801611e09565b6040518082815260200191505060405180910390f35b34801561082357600080fd5b506108dd6004803603602081101561083a57600080fd5b810190808035906020019064010000000081111561085757600080fd5b82018360208201111561086957600080fd5b8035906020019184600183028401116401000000008311171561088b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e30565b005b610960600480360360408110156108f557600080fd5b81019080803590602001909291908035906020019064010000000081111561091c57600080fd5b82018360208201111561092e57600080fd5b8035906020019184600183028401116401000000008311171561095057600080fd5b90919293919293905050506122ac565b005b34801561096e57600080fd5b50610a7c600480360360a081101561098557600080fd5b81019080803590602001906401000000008111156109a257600080fd5b8201836020820111156109b457600080fd5b803590602001918460018302840111640100000000831117156109d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b1565b005b348015610a8a57600080fd5b50610b5860048036036060811015610aa157600080fd5b8101908080359060200190640100000000811115610abe57600080fd5b820183602082011115610ad057600080fd5b80359060200191846001830284011164010000000083111715610af257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061272c565b005b348015610b6657600080fd5b50610c2060048036036020811015610b7d57600080fd5b8101908080359060200190640100000000811115610b9a57600080fd5b820183602082011115610bac57600080fd5b80359060200191846001830284011164010000000083111715610bce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061273f565b005b348015610c2e57600080fd5b50610c7160048036036020811015610c4557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612819565b005b348015610c7f57600080fd5b50610d5960048036036040811015610c9657600080fd5b8101908080359060200190640100000000811115610cb357600080fd5b820183602082011115610cc557600080fd5b80359060200191846001830284011164010000000083111715610ce757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128b7565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610db6575063c1b15f5a60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e66576004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610f1a565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8360001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610edc57600080fd5b505afa158015610ef0573d6000803e3d6000fd5b505050506040513d6020811015610f0657600080fd5b810190808051906020019092919050505090505b919050565b6000809054906101000a900460ff1615610f3857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9257600080fd5b60016000806101000a81548160ff021916908315150217905550565b6000828260405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561105657600080fd5b505afa15801561106a573d6000803e3d6000fd5b505050506040513d602081101561108057600080fd5b8101908080519060200190929190505050905061109c816129f7565b15806110d357508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110dc57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ef2c7f0858584600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561119057600080fd5b505afa1580156111a4573d6000803e3d6000fd5b505050506040513d60208110156111ba57600080fd5b8101908080519060200190929190505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316a25cbd896040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561123e57600080fd5b505afa158015611252573d6000803e3d6000fd5b505050506040513d602081101561126857600080fd5b81019080805190602001909291905050506040518663ffffffff1660e01b8152600401808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff16815260200195505050505050600060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806000807f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b886040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600081888860405180838380828437808301925050509250505060405180910390206040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156114ff57600080fd5b505afa158015611513573d6000803e3d6000fd5b505050506040513d602081101561152957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146115855760008060006040518060200160405280600081525092919082925081915080905095509550955095505050611657565b6000600460008b8152602001908152602001600020905080600001816002015460008360030154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116415780601f1061161657610100808354040283529160200191611641565b820191906000526020600020905b81548152906001019060200180831161162457829003601f168201915b5050505050935081915096509650965096505050505b93509350935093565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff161561169f57600080fd5b600083905060007f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b8860405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000878760405180838380828437808301925050509250505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be384846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117d657600080fd5b505afa1580156117ea573d6000803e3d6000fd5b505050506040513d602081101561180057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161461183157600080fd5b6000600460008b81526020019081526020016000209050898160000160405180828054600181600116156101000203166002900480156118a85780601f106118865761010080835404028352918201916118a8565b820191906000526020600020905b815481529060010190602001808311611894575b50509150506040518091039020146118bf57600080fd5b80600201543410156118d057600080fd5b806002015434111561192a573373ffffffffffffffffffffffffffffffffffffffff166108fc826002015434039081150290604051600060405180830381858888f19350505050158015611928573d6000803e3d6000fd5b505b600081600201549050600082600301541180156119745750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b80156119d057508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b15611a3e576000620f42408360030154846002015402816119ed57fe5b0490508773ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a36573d6000803e3d6000fd5b508082039150505b6000811115611ab3578160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611ab1573d6000803e3d6000fd5b505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611aec573394505b611af884848789612a0a565b8673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168c7ffa38f9920801763ca6e4ee19135fb26a4fa11c0a34f7117455064991a1a3e6588d8d876002015460405180806020018381526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a45050505050505050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bfd57600080fd5b6000809054906101000a900460ff16611c1557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90509392505050565b81805190602001203373ffffffffffffffffffffffffffffffffffffffff16611cad82610dbd565b73ffffffffffffffffffffffffffffffffffffffff1614611ccd57600080fd5b60008380519060200120905060007f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b826040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a82866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b505050505050505050565b6000809054906101000a900460ff1681565b7f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b81565b80805190602001203373ffffffffffffffffffffffffffffffffffffffff16611e5882610dbd565b73ffffffffffffffffffffffffffffffffffffffff1614611e7857600080fd5b6000809054906101000a900460ff16611e9057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611eec57600080fd5b6000828051906020012090506000600460008381526020019081526020016000209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460001c6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611fdd57600080fd5b505af1158015611ff1573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cf77525582600001836002015484600301548560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518663ffffffff1660e01b815260040180806020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156121705780601f1061214557610100808354040283529160200191612170565b820191906000526020600020905b81548152906001019060200180831161215357829003601f168201915b50509650505050505050600060405180830381600087803b15801561219457600080fd5b505af11580156121a8573d6000803e3d6000fd5b5050505060046000838152602001908152602001600020600080820160006121d09190612d52565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090555050817f8c0dd32279c25300d82425bebe31a5c703918d83d2bb57a1155dfa6cbba61cf8856040518080602001828103825283818151815260200191508051906020019080838360005b8381101561226c578082015181840152602081019050612251565b50505050905090810190601f1680156122995780820380516001836020036101000a031916815260200191505b509250505060405180910390a250505050565b600080fd5b84805190602001203373ffffffffffffffffffffffffffffffffffffffff166122d982610dbd565b73ffffffffffffffffffffffffffffffffffffffff16146122f957600080fd5b60008680519060200120905060006004600083815260200190815260200160002090503073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8460001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156123a957600080fd5b505afa1580156123bd573d6000803e3d6000fd5b505050506040513d60208110156123d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146125bc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308560001c6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156124df57600080fd5b505af11580156124f3573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166328ed4f6c8360001c306040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156125a357600080fd5b505af11580156125b7573d6000803e3d6000fd5b505050505b8473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461265757848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b818160000160405180828054600181600116156101000203166002900480156126b75780601f106126955761010080835404028352918201916126b7565b820191906000526020600020905b8154815290600101906020018083116126a3575b50509150506040518091039020146126e357878160000190805190602001906126e1929190612d9a565b505b868160020181905550858160030181905550817f1427993bb6b6c16d8953c450c37078c8f41196e2e2db1619cda06620143e2d9160405160405180910390a25050505050505050565b61273a8383833360006122b1565b505050565b80805190602001203373ffffffffffffffffffffffffffffffffffffffff1661276782610dbd565b73ffffffffffffffffffffffffffffffffffffffff161461278757600080fd5b6000828051906020012090506000600460008381526020019081526020016000209050817f77f7b610de5055c8f704e6a3b12874468f5785f3a7d1007b67a8a4b4c7ed88fc60405160405180910390a2604051806020016040528060008152508160000190805190602001906127fe929190612d9a565b50600081600201819055506000816003018190555050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461287357600080fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b81805190602001203373ffffffffffffffffffffffffffffffffffffffff166128df82610dbd565b73ffffffffffffffffffffffffffffffffffffffff16146128ff57600080fd5b6000838051906020012090508273ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f06e9c07310f63759634ddbb7257dbb19ca404f90bd6bdef1d3386fab033cebce60405160405180910390a4826004600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080823b905060008111915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59238585306040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b158015612abb57600080fd5b505af1158015612acf573d6000803e3d6000fd5b505050506040513d6020811015612ae557600080fd5b810190808051906020019092919050505050600084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a82846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612bd357600080fd5b505af1158015612be7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d5fa2b0082856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612c7257600080fd5b505af1158015612c86573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b0fc9c382856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612d3357600080fd5b505af1158015612d47573d6000803e3d6000fd5b505050505050505050565b50805460018160011615610100020316600290046000825580601f10612d785750612d97565b601f016020900490600052602060002090810190612d969190612e1a565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ddb57805160ff1916838001178555612e09565b82800160010185558215612e09579182015b82811115612e08578251825591602001919060010190612ded565b5b509050612e169190612e1a565b5090565b612e3c91905b80821115612e38576000816000905550600101612e20565b5090565b9056fea265627a7a72315820a2f28e00dd4c714c02ad16ca1b31df8c5b3ef571cb6f9162fc6372d17d9857e964736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c8063660b7ad5116100ab578063cb01a9bf1161006f578063cb01a9bf146108df578063cf77525514610962578063da1fe7d514610a7e578063e34e788914610b5a578063f2fde38b14610c22578063fbf58b3e14610c7357610135565b8063660b7ad514610631578063733ccaba146106d557806375f12b21146107bd57806396df3540146107ec578063c9c5b5b41461081757610135565b80631cb82d79116100fd5780631cb82d79146102da5780632b20e397146103315780632eef3d65146103885780633f15457f146104a65780634254b155146104fd5780634732a7dc146105e057610135565b806301ffc9a71461013a57806302571be3146101ac57806307da68f51461022757806311fb13351461023e5780631705a3bd14610283575b600080fd5b34801561014657600080fd5b506101926004803603602081101561015d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d5b565b604051808215151515815260200191505060405180910390f35b3480156101b857600080fd5b506101e5600480360360208110156101cf57600080fd5b8101908080359060200190929190505050610dbd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023357600080fd5b5061023c610f1f565b005b34801561024a57600080fd5b506102816004803603604081101561026157600080fd5b810190808035906020019092919080359060200190929190505050610fae565b005b34801561028f57600080fd5b50610298611355565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e657600080fd5b506102ef61137b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033d57600080fd5b506103466113a1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039457600080fd5b50610416600480360360408110156103ab57600080fd5b8101908080359060200190929190803590602001906401000000008111156103d257600080fd5b8201836020820111156103e457600080fd5b8035906020019184600183028401116401000000008311171561040657600080fd5b90919293919293905050506113c7565b6040518080602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561046857808201518184015260208101905061044d565b50505050905090810190601f1680156104955780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156104b257600080fd5b506104bb611660565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105de600480360360a081101561051357600080fd5b81019080803590602001909291908035906020019064010000000081111561053a57600080fd5b82018360208201111561054c57600080fd5b8035906020019184600183028401116401000000008311171561056e57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611686565b005b3480156105ec57600080fd5b5061062f6004803603602081101561060357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ba3565b005b34801561063d57600080fd5b506106bf6004803603604081101561065457600080fd5b81019080803590602001909291908035906020019064010000000081111561067b57600080fd5b82018360208201111561068d57600080fd5b803590602001918460018302840111640100000000831117156106af57600080fd5b9091929391929390505050611c59565b6040518082815260200191505060405180910390f35b3480156106e157600080fd5b506107bb600480360360408110156106f857600080fd5b810190808035906020019064010000000081111561071557600080fd5b82018360208201111561072757600080fd5b8035906020019184600183028401116401000000008311171561074957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c85565b005b3480156107c957600080fd5b506107d2611df7565b604051808215151515815260200191505060405180910390f35b3480156107f857600080fd5b50610801611e09565b6040518082815260200191505060405180910390f35b34801561082357600080fd5b506108dd6004803603602081101561083a57600080fd5b810190808035906020019064010000000081111561085757600080fd5b82018360208201111561086957600080fd5b8035906020019184600183028401116401000000008311171561088b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e30565b005b610960600480360360408110156108f557600080fd5b81019080803590602001909291908035906020019064010000000081111561091c57600080fd5b82018360208201111561092e57600080fd5b8035906020019184600183028401116401000000008311171561095057600080fd5b90919293919293905050506122ac565b005b34801561096e57600080fd5b50610a7c600480360360a081101561098557600080fd5b81019080803590602001906401000000008111156109a257600080fd5b8201836020820111156109b457600080fd5b803590602001918460018302840111640100000000831117156109d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b1565b005b348015610a8a57600080fd5b50610b5860048036036060811015610aa157600080fd5b8101908080359060200190640100000000811115610abe57600080fd5b820183602082011115610ad057600080fd5b80359060200191846001830284011164010000000083111715610af257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061272c565b005b348015610b6657600080fd5b50610c2060048036036020811015610b7d57600080fd5b8101908080359060200190640100000000811115610b9a57600080fd5b820183602082011115610bac57600080fd5b80359060200191846001830284011164010000000083111715610bce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061273f565b005b348015610c2e57600080fd5b50610c7160048036036020811015610c4557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612819565b005b348015610c7f57600080fd5b50610d5960048036036040811015610c9657600080fd5b8101908080359060200190640100000000811115610cb357600080fd5b820183602082011115610cc557600080fd5b80359060200191846001830284011164010000000083111715610ce757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128b7565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610db6575063c1b15f5a60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e66576004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610f1a565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8360001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610edc57600080fd5b505afa158015610ef0573d6000803e3d6000fd5b505050506040513d6020811015610f0657600080fd5b810190808051906020019092919050505090505b919050565b6000809054906101000a900460ff1615610f3857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9257600080fd5b60016000806101000a81548160ff021916908315150217905550565b6000828260405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561105657600080fd5b505afa15801561106a573d6000803e3d6000fd5b505050506040513d602081101561108057600080fd5b8101908080519060200190929190505050905061109c816129f7565b15806110d357508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110dc57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ef2c7f0858584600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561119057600080fd5b505afa1580156111a4573d6000803e3d6000fd5b505050506040513d60208110156111ba57600080fd5b8101908080519060200190929190505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316a25cbd896040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561123e57600080fd5b505afa158015611252573d6000803e3d6000fd5b505050506040513d602081101561126857600080fd5b81019080805190602001909291905050506040518663ffffffff1660e01b8152600401808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff16815260200195505050505050600060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806000807f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b886040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600081888860405180838380828437808301925050509250505060405180910390206040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156114ff57600080fd5b505afa158015611513573d6000803e3d6000fd5b505050506040513d602081101561152957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146115855760008060006040518060200160405280600081525092919082925081915080905095509550955095505050611657565b6000600460008b8152602001908152602001600020905080600001816002015460008360030154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116415780601f1061161657610100808354040283529160200191611641565b820191906000526020600020905b81548152906001019060200180831161162457829003601f168201915b5050505050935081915096509650965096505050505b93509350935093565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff161561169f57600080fd5b600083905060007f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b8860405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000878760405180838380828437808301925050509250505060405180910390209050600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be384846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117d657600080fd5b505afa1580156117ea573d6000803e3d6000fd5b505050506040513d602081101561180057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161461183157600080fd5b6000600460008b81526020019081526020016000209050898160000160405180828054600181600116156101000203166002900480156118a85780601f106118865761010080835404028352918201916118a8565b820191906000526020600020905b815481529060010190602001808311611894575b50509150506040518091039020146118bf57600080fd5b80600201543410156118d057600080fd5b806002015434111561192a573373ffffffffffffffffffffffffffffffffffffffff166108fc826002015434039081150290604051600060405180830381858888f19350505050158015611928573d6000803e3d6000fd5b505b600081600201549050600082600301541180156119745750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b80156119d057508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b15611a3e576000620f42408360030154846002015402816119ed57fe5b0490508773ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a36573d6000803e3d6000fd5b508082039150505b6000811115611ab3578160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611ab1573d6000803e3d6000fd5b505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611aec573394505b611af884848789612a0a565b8673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168c7ffa38f9920801763ca6e4ee19135fb26a4fa11c0a34f7117455064991a1a3e6588d8d876002015460405180806020018381526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a45050505050505050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bfd57600080fd5b6000809054906101000a900460ff16611c1557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90509392505050565b81805190602001203373ffffffffffffffffffffffffffffffffffffffff16611cad82610dbd565b73ffffffffffffffffffffffffffffffffffffffff1614611ccd57600080fd5b60008380519060200120905060007f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b826040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a82866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b505050505050505050565b6000809054906101000a900460ff1681565b7f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b81565b80805190602001203373ffffffffffffffffffffffffffffffffffffffff16611e5882610dbd565b73ffffffffffffffffffffffffffffffffffffffff1614611e7857600080fd5b6000809054906101000a900460ff16611e9057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611eec57600080fd5b6000828051906020012090506000600460008381526020019081526020016000209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460001c6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611fdd57600080fd5b505af1158015611ff1573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cf77525582600001836002015484600301548560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518663ffffffff1660e01b815260040180806020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156121705780601f1061214557610100808354040283529160200191612170565b820191906000526020600020905b81548152906001019060200180831161215357829003601f168201915b50509650505050505050600060405180830381600087803b15801561219457600080fd5b505af11580156121a8573d6000803e3d6000fd5b5050505060046000838152602001908152602001600020600080820160006121d09190612d52565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090555050817f8c0dd32279c25300d82425bebe31a5c703918d83d2bb57a1155dfa6cbba61cf8856040518080602001828103825283818151815260200191508051906020019080838360005b8381101561226c578082015181840152602081019050612251565b50505050905090810190601f1680156122995780820380516001836020036101000a031916815260200191505b509250505060405180910390a250505050565b600080fd5b84805190602001203373ffffffffffffffffffffffffffffffffffffffff166122d982610dbd565b73ffffffffffffffffffffffffffffffffffffffff16146122f957600080fd5b60008680519060200120905060006004600083815260200190815260200160002090503073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8460001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156123a957600080fd5b505afa1580156123bd573d6000803e3d6000fd5b505050506040513d60208110156123d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146125bc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308560001c6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156124df57600080fd5b505af11580156124f3573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166328ed4f6c8360001c306040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156125a357600080fd5b505af11580156125b7573d6000803e3d6000fd5b505050505b8473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461265757848160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b818160000160405180828054600181600116156101000203166002900480156126b75780601f106126955761010080835404028352918201916126b7565b820191906000526020600020905b8154815290600101906020018083116126a3575b50509150506040518091039020146126e357878160000190805190602001906126e1929190612d9a565b505b868160020181905550858160030181905550817f1427993bb6b6c16d8953c450c37078c8f41196e2e2db1619cda06620143e2d9160405160405180910390a25050505050505050565b61273a8383833360006122b1565b505050565b80805190602001203373ffffffffffffffffffffffffffffffffffffffff1661276782610dbd565b73ffffffffffffffffffffffffffffffffffffffff161461278757600080fd5b6000828051906020012090506000600460008381526020019081526020016000209050817f77f7b610de5055c8f704e6a3b12874468f5785f3a7d1007b67a8a4b4c7ed88fc60405160405180910390a2604051806020016040528060008152508160000190805190602001906127fe929190612d9a565b50600081600201819055506000816003018190555050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461287357600080fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b81805190602001203373ffffffffffffffffffffffffffffffffffffffff166128df82610dbd565b73ffffffffffffffffffffffffffffffffffffffff16146128ff57600080fd5b6000838051906020012090508273ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f06e9c07310f63759634ddbb7257dbb19ca404f90bd6bdef1d3386fab033cebce60405160405180910390a4826004600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080823b905060008111915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59238585306040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b158015612abb57600080fd5b505af1158015612acf573d6000803e3d6000fd5b505050506040513d6020811015612ae557600080fd5b810190808051906020019092919050505050600084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a82846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612bd357600080fd5b505af1158015612be7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d5fa2b0082856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612c7257600080fd5b505af1158015612c86573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b0fc9c382856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015612d3357600080fd5b505af1158015612d47573d6000803e3d6000fd5b505050505050505050565b50805460018160011615610100020316600290046000825580601f10612d785750612d97565b601f016020900490600052602060002090810190612d969190612e1a565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ddb57805160ff1916838001178555612e09565b82800160010185558215612e09579182015b82811115612e08578251825591602001919060010190612ded565b5b509050612e169190612e1a565b5090565b612e3c91905b80821115612e38576000816000905550600101612e20565b5090565b9056fea265627a7a72315820a2f28e00dd4c714c02ad16ca1b31df8c5b3ef571cb6f9162fc6372d17d9857e964736f6c63430005100032",
  "sourceMap": "1504:725:1:-;;;348:5:0;326:27;;;;;;;;;;;;;;;;;;;;1585:67:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;1585:67:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1585:67:1;;;;;;;;;;;;;;;;1637:3;1795::2;869:4:0;863:3;;:10;;;;;;;;;;;;;;;;;;895:3;;;;;;;;;;;:9;;;253:66;905:8;;895:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;895:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;895:19:0;;;;;;;;;;;;;;;;883:9;;:31;;;;;;;;;;;;;;;;;;941:10;924:14;;:27;;;;;;;;;;;;;;;;;;824:134;1747:63:2;1585:67:1;1504:725;;;;;;",
  "deployedSourceMap": "1504:725:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:243:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1568:243:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1568:243:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2291:236:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2291:236:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2291:236:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2979:87:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2979:87:0;;;:::i;:::-;;1658:408:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1658:408:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1658:408:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;394:24:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;359:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;425:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5383:518:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5383:518:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5383:518:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5383:518:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5383:518:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5383:518:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5383:518:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:14:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:14:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6257:1651:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6257:1651:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6257:1651:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6257:1651:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6257:1651:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3203:142:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3203:142:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3203:142:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;7914:188:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7914:188:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7914:188:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7914:188:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7914:188:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7914:188:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2187:266:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2187:266:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2187:266:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2187:266:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2187:266:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2187:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2187:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;326:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;218:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:101:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8230:620:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8230:620:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8230:620:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8230:620:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8230:620:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8230:620:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8230:620:2;;;;;;;;;;;;;;;:::i;:::-;;8856:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8856:101:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8856:101:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8856:101:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8856:101:2;;;;;;;;;;;;:::i;:::-;;3569:858;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3569:858:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3569:858:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3569:858:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3569:858:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3569:858:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3569:858:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2711:175:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2711:175:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2711:175:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2711:175:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2711:175:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2711:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2711:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4571:311:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4571:311:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4571:311:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4571:311:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4571:311:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4571:311:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4571:311:2;;;;;;;;;;;;;;;:::i;:::-;;3351:115:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3351:115:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3351:115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2743:268:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2743:268:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2743:268:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2743:268:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2743:268:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2743:268:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2743:268:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1568:243:0;1636:4;1689:10;1674:25;;:11;:25;;;;1673:99;;;;1761:10;1746:25;;:11;:25;;;;1673:99;1652:152;;1568:243;;;:::o;2291:236:2:-;2342:7;2397:3;2365:36;;:7;:14;2373:5;2365:14;;;;;;;;;;;:20;;;;;;;;;;;;:36;;;2361:94;;2424:7;:14;2432:5;2424:14;;;;;;;;;;;:20;;;;;;;;;;;;2417:27;;;;2361:94;2486:9;;;;;;;;;;;2472:32;;;2513:5;2505:14;;2472:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2472:48:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2472:48:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2472:48:2;;;;;;;;;;;;;;;;2465:55;;2291:236;;;;:::o;2979:87:0:-;623:7;;;;;;;;;;;622:8;614:17;;;;;;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;3055:4;3045:7;;:14;;;;;;;;;;;;;;;;;;2979:87::o;1658:408:1:-;1732:15;1777:4;1783:5;1760:29;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1760:29:1;;;1750:40;;;;;;1732:58;;1800:16;1819:3;;;;;;;;;;;:9;;;1829:7;1819:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1819:18:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1819:18:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1819:18:1;;;;;;;;;;;;;;;;1800:37;;1917:20;1928:8;1917:10;:20::i;:::-;1916:21;:47;;;;1955:8;1941:22;;:10;:22;;;1916:47;1908:56;;;;;;1975:3;;;;;;;;;;;:20;;;1996:4;2002:5;2009:8;2019:3;;;;;;;;;;;:12;;;2032:7;2019:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2019:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2019:21:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2019:21:1;;;;;;;;;;;;;;;;2042:3;;;;;;;;;;;:7;;;2050;2042:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2042:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2042:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2042:16:1;;;;;;;;;;;;;;;;1975:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1975:84:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:84:1;;;;1658:408;;;;:::o;394:24:0:-;;;;;;;;;;;;;:::o;359:29::-;;;;;;;;;;;;;:::o;425:24::-;;;;;;;;;;;;;:::o;5383:518:2:-;5463:20;5485:10;5497:9;5508:19;5539:12;253:66:0;5581:8:2;;5591:5;5564:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5564:33:2;;;5554:44;;;;;;5539:59;;5608:15;5653:4;5675:9;;5659:27;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;5659:27:2;;;;;;;;;;;;;5636:51;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5636:51:2;;;5626:62;;;;;;5608:80;;5733:3;5703:34;;:3;;;;;;;;;;;:9;;;5713:7;5703:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5703:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5703:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5703:18:2;;;;;;;;;;;;;;;;:34;;;5699:85;;5765:1;5768;5771;5753:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5699:85;5794:19;5816:7;:14;5824:5;5816:14;;;;;;;;;;;5794:36;;5848:4;:9;;5859:4;:10;;;5871:1;5874:4;:19;;;5840:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5383:518;;;;;;;;:::o;456:14:0:-;;;;;;;;;;;;;:::o;6257:1651:2:-;623:7:0;;;;;;;;;;;622:8;614:17;;;;;;6425:22:2;6450:15;6425:40;;6475:18;253:66:0;6523:8:2;;6533:5;6506:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6506:33:2;;;6496:44;;;;;;6475:65;;6550:22;6591:9;;6575:27;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;6575:27:2;;;;;;;;;;;;;6550:52;;6752:1;6674:80;;:3;;;;;;;;;;;:9;;;6711:10;6723:14;6694:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6694:44:2;;;6684:55;;;;;;6674:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6674:66:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6674:66:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6674:66:2;;;;;;;;;;;;;;;;:80;;;6666:89;;;;;;6766:21;6790:7;:14;6798:5;6790:14;;;;;;;;;;;6766:38;;6909:5;6892:6;:11;;6876:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;6868:47;;;;;;6985:6;:12;;;6972:9;:25;;6964:34;;;;;;7056:6;:12;;;7044:9;:24;7040:100;;;7084:10;:19;;:45;7116:6;:12;;;7104:9;:24;7084:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7084:45:2;7040:100;7183:13;7199:6;:12;;;7183:28;;7249:1;7225:6;:21;;;:25;:53;;;;;7274:3;7254:24;;:8;:24;;;;7225:53;:81;;;;;7294:6;:12;;;;;;;;;;;;7282:24;;:8;:24;;;;7225:81;7221:260;;;7322:19;7385:7;7360:6;:21;;;7345:6;:12;;;:36;7344:48;;;;;;7322:70;;7406:8;:17;;:30;7424:11;7406:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7406:30:2;7459:11;7450:20;;;;7221:260;;7540:1;7532:5;:9;7528:68;;;7557:6;:12;;;;;;;;;;;;:21;;:28;7579:5;7557:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7557:28:2;7528:68;7667:3;7641:30;;:14;:30;;;7637:88;;;7704:10;7687:27;;7637:88;7734:78;7749:10;7761:14;7777;7802:8;7734:14;:78::i;:::-;7878:8;7828:73;;7862:14;7828:73;;7844:5;7828:73;7851:9;;7888:6;:12;;;7828:73;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7828:73:2;;;;;;;;;;;;;;;641:1:0;;;;;6257:1651:2;;;;;;:::o;3203:142:0:-;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;3298:7;;;;;;;;;;;3290:16;;;;;;3328:10;3316:9;;:22;;;;;;;;;;;;;;;;;;3203:142;:::o;7914:188:2:-;7996:14;8029:66;8022:73;;7914:188;;;;;:::o;2187:266:0:-;2280:4;2264:22;;;;;;546:10;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;2298:13;2330:4;2314:22;;;;;;2298:38;;2346:12;253:66;2388:8;;2398:5;2371:33;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2371:33:0;;;2361:44;;;;;;2346:59;;2415:3;;;;;;;;;;;:15;;;2431:4;2437:8;2415:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2415:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2415:31:0;;;;567:1;;2187:266;;;:::o;326:27::-;;;;;;;;;;;;;:::o;218:101::-;253:66;218:101;;;:::o;8230:620:2:-;8301:4;8285:22;;;;;;546:10:0;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;8327:7:2;;;;;;;;;;;8319:16;;;;;;8374:3;8353:25;;:9;;;;;;;;;;;:25;;;;8345:34;;;;;;8390:13;8422:4;8406:22;;;;;;8390:38;;8438:21;8462:7;:14;8470:5;8462:14;;;;;;;;;;;8438:38;;8501:9;;;;;;;;;;;8487:32;;;8520:9;;;;;;;;;;;8539:5;8531:14;;8487:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8487:59:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8487:59:2;;;;8588:9;;;;;;;;;;;8557:60;;;8631:6;:11;;8656:6;:12;;;8682:6;:21;;;8717:6;:12;;;;;;;;;;;;8751:3;8557:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8557:208:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8557:208:2;;;;8783:7;:14;8791:5;8783:14;;;;;;;;;;;;8776:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8831:5;8813:30;8838:4;8813:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8813:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:1:0;;8230:620:2;;:::o;8856:101::-;8942:8;;;3569:858;3727:4;3711:22;;;;;;546:10:0;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;3745:13:2;3777:4;3761:22;;;;;;3745:38;;3793:21;3817:7;:14;3825:5;3817:14;;;;;;;;;;;3793:38;;3906:4;3846:65;;3860:9;;;;;;;;;;;3846:32;;;3887:5;3879:14;;3846:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3846:48:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3846:48:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3846:48:2;;;;;;;;;;;;;;;;:65;;;3842:253;;3941:9;;;;;;;;;;;3927:37;;;3965:10;3985:4;4000:5;3992:14;;3927:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3927:80:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3927:80:2;;;;4035:9;;;;;;;;;;;4021:32;;;4062:5;4054:14;;4078:4;4021:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4021:63:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4021:63:2;;;;3842:253;4125:6;4109:22;;:6;:12;;;;;;;;;;;;:22;;;4105:74;;4162:6;4147;:12;;;:21;;;;;;;;;;;;;;;;;;4105:74;4226:5;4209:6;:11;;4193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;4189:114;;4288:4;4274:6;:11;;:18;;;;;;;;;;;;:::i;:::-;;4189:114;4328:5;4313:6;:12;;:20;;;;4367:14;4343:6;:21;;:38;;;;4414:5;4397:23;;;;;;;;;;567:1:0;;3569:858:2;;;;;;:::o;2711:175:0:-;2806:73;2825:4;2831:5;2838:14;2854:10;2874:3;2806:18;:73::i;:::-;2711:175;;;:::o;4571:311:2:-;4647:4;4631:22;;;;;;546:10:0;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;4665:13:2;4697:4;4681:22;;;;;;4665:38;;4713:21;4737:7;:14;4745:5;4737:14;;;;;;;;;;;4713:38;;4781:5;4766:21;;;;;;;;;;4798:16;;;;;;;;;;;;:6;:11;;:16;;;;;;;;;;;;:::i;:::-;;4839:1;4824:6;:12;;:16;;;;4874:1;4850:6;:21;;:25;;;;567:1:0;;4571:311:2;;:::o;3351:115:0:-;719:14;;;;;;;;;;;705:28;;:10;:28;;;697:37;;;;;;3451:8;3434:14;;:25;;;;;;;;;;;;;;;;;;3351:115;:::o;2743:268:2:-;2841:4;2825:22;;;;;;546:10:0;530:26;;:12;536:5;530;:12::i;:::-;:26;;;522:35;;;;;;2859:13:2;2891:4;2875:22;;;;;;2859:38;;2954:8;2912:51;;2932:7;:14;2940:5;2932:14;;;;;;;;;;;:20;;;;;;;;;;;;2912:51;;2925:5;2912:51;;;;;;;;;;2996:8;2973:7;:14;2981:5;2973:14;;;;;;;;;;;:20;;;:31;;;;;;;;;;;;;;;;;;567:1:0;2743:268:2;;;:::o;2072:155:1:-;2123:4;2139:9;2189:4;2177:17;2169:25;;2219:1;2212:4;:8;2205:15;;;2072:155;;;:::o;964:598:0:-;1131:3;;;;;;;;;;;:19;;;1151:4;1157:5;1172:4;1131:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1131:47:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1131:47:0;;;;;;;;;;;;;;;;;1189:15;1234:4;1240:5;1217:29;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1217:29:0;;;1207:40;;;;;;1189:58;;1297:3;;;;;;;;;;;:15;;;1313:7;1330:8;1297:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1297:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1297:43:0;;;;1401:8;:16;;;1418:7;1427:14;1401:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:41:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1401:41:0;;;;1518:3;;;;;;;;;;;:12;;;1531:7;1540:14;1518:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1518:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1518:37:0;;;;964:598;;;;;:::o;1504:725:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@ensdomains/ethregistrar/contracts/BaseRegistrar.sol\";\nimport \"./EthRegistrarSubdomainRegistrar.sol\";\n\n/**\n * @dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n *\n * Users may register a subdomain by calling `register` with the name of the domain\n * they wish to register under, and the label hash of the subdomain they want to\n * register. They must also specify the new owner of the domain, and the referrer,\n * who is paid an optional finder's fee. The registrar then configures a simple\n * default resolver, which resolves `addr` lookups to the new owner, and sets\n * the `owner` account as the owner of the subdomain in ENS.\n *\n * New domains may be added by calling `configureDomain`, then transferring\n * ownership in the ENS registry to this contract. Ownership in the contract\n * may be transferred using `transfer`, and a domain may be unlisted for sale\n * using `unlistDomain`. There is (deliberately) no way to recover ownership\n * in ENS once the name is transferred to this registrar.\n *\n * Critically, this contract does not check one key property of a listed domain:\n *\n * - Is the name UTS46 normalised?\n *\n * User applications MUST check these two elements for each domain before\n * offering them to users for registration.\n *\n * Applications should additionally check that the domains they are offering to\n * register are controlled by this registrar, since calls to `register` will\n * fail if this is not the case.\n */\ncontract ENSMigrationSubdomainRegistrar is EthRegistrarSubdomainRegistrar {\n\n    constructor(ENS ens) EthRegistrarSubdomainRegistrar(ens) public { }\n\n    function migrateSubdomain(bytes32 node, bytes32 label) external {\n        bytes32 subnode = keccak256(abi.encodePacked(node, label));\n        address previous = ens.owner(subnode);\n\n        // only allow a contract to run their own migration\n        require(!isContract(previous) || msg.sender == previous);\n\n        ens.setSubnodeRecord(node, label, previous, ens.resolver(subnode), ens.ttl(subnode));\n    }\n\n    function isContract(address addr) private returns (bool) {\n        uint size;\n        assembly { size := extcodesize(addr) }\n        return size > 0;\n    }\n}\n",
  "sourcePath": "/Users/makoto/work/ens/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
  "ast": {
    "absolutePath": "/Users/makoto/work/ens/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
    "exportedSymbols": {
      "ENSMigrationSubdomainRegistrar": [
        391
      ]
    },
    "id": 392,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 308,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "file": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "id": 309,
        "nodeType": "ImportDirective",
        "scope": 392,
        "sourceUnit": 4883,
        "src": "25:62:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/makoto/work/ens/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol",
        "file": "./EthRegistrarSubdomainRegistrar.sol",
        "id": 310,
        "nodeType": "ImportDirective",
        "scope": 392,
        "sourceUnit": 1015,
        "src": "88:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 311,
              "name": "EthRegistrarSubdomainRegistrar",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1014,
              "src": "1547:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthRegistrarSubdomainRegistrar_$1014",
                "typeString": "contract EthRegistrarSubdomainRegistrar"
              }
            },
            "id": 312,
            "nodeType": "InheritanceSpecifier",
            "src": "1547:30:1"
          }
        ],
        "contractDependencies": [
          306,
          1014,
          1159
        ],
        "contractKind": "contract",
        "documentation": "@dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n * Users may register a subdomain by calling `register` with the name of the domain\nthey wish to register under, and the label hash of the subdomain they want to\nregister. They must also specify the new owner of the domain, and the referrer,\nwho is paid an optional finder's fee. The registrar then configures a simple\ndefault resolver, which resolves `addr` lookups to the new owner, and sets\nthe `owner` account as the owner of the subdomain in ENS.\n * New domains may be added by calling `configureDomain`, then transferring\nownership in the ENS registry to this contract. Ownership in the contract\nmay be transferred using `transfer`, and a domain may be unlisted for sale\nusing `unlistDomain`. There is (deliberately) no way to recover ownership\nin ENS once the name is transferred to this registrar.\n * Critically, this contract does not check one key property of a listed domain:\n * - Is the name UTS46 normalised?\n * User applications MUST check these two elements for each domain before\noffering them to users for registration.\n * Applications should additionally check that the domains they are offering to\nregister are controlled by this registrar, since calls to `register` will\nfail if this is not the case.",
        "fullyImplemented": true,
        "id": 391,
        "linearizedBaseContracts": [
          391,
          1014,
          306,
          1159
        ],
        "name": "ENSMigrationSubdomainRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "1649:3:1",
              "statements": []
            },
            "documentation": null,
            "id": 321,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 317,
                    "name": "ens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 314,
                    "src": "1637:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2616",
                      "typeString": "contract ENS"
                    }
                  }
                ],
                "id": 318,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 316,
                  "name": "EthRegistrarSubdomainRegistrar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1014,
                  "src": "1606:30:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EthRegistrarSubdomainRegistrar_$1014_$",
                    "typeString": "type(contract EthRegistrarSubdomainRegistrar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1606:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "1597:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$2616",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 313,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2616,
                    "src": "1597:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2616",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:1"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:1"
            },
            "scope": 391,
            "src": "1585:67:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "1722:344:1",
              "statements": [
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "name": "subnode",
                      "nodeType": "VariableDeclaration",
                      "scope": 373,
                      "src": "1732:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1732:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "1777:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 334,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "1783:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6897,
                            "src": "1760:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1760:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1760:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 330,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6904,
                      "src": "1750:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:58:1"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "name": "previous",
                      "nodeType": "VariableDeclaration",
                      "scope": 373,
                      "src": "1800:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 342,
                        "name": "subnode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1829:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1819:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2616",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2585,
                      "src": "1819:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1916:21:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 347,
                                "name": "previous",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1928:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 346,
                              "name": "isContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "1917:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1917:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6910,
                              "src": "1941:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1941:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 352,
                            "name": "previous",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "1955:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1941:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1916:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6913,
                        6914
                      ],
                      "referencedDeclaration": 6913,
                      "src": "1908:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "1996:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2002:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "previous",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "2009:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "2032:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 363,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2019:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$2616",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2592,
                          "src": "2019:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2019:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 369,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "2050:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2042:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$2616",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ttl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2599,
                          "src": "2042:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint64_$",
                            "typeString": "function (bytes32) view external returns (uint64)"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1975:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2616",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "1975:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,address,uint64) external"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:84:1"
                }
              ]
            },
            "documentation": null,
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateSubdomain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "1684:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "1698:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:29:1"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:1"
            },
            "scope": 391,
            "src": "1658:408:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "2129:98:1",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "2139:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:9:1"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 382,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2169:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 376,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2189:4:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 384,
                  "nodeType": "InlineAssembly",
                  "operations": "{ size := extcodesize(addr) }",
                  "src": "2158:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "2212:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2219:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2212:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 380,
                  "id": 388,
                  "nodeType": "Return",
                  "src": "2205:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2092:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:14:1"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2123:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:6:1"
            },
            "scope": 391,
            "src": "2072:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 392,
        "src": "1504:725:1"
      }
    ],
    "src": "0:2230:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/makoto/work/ens/subdomain-registrar/contracts/ENSMigrationSubdomainRegistrar.sol",
    "exportedSymbols": {
      "ENSMigrationSubdomainRegistrar": [
        391
      ]
    },
    "id": 392,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 308,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "file": "@ensdomains/ethregistrar/contracts/BaseRegistrar.sol",
        "id": 309,
        "nodeType": "ImportDirective",
        "scope": 392,
        "sourceUnit": 4883,
        "src": "25:62:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/makoto/work/ens/subdomain-registrar/contracts/EthRegistrarSubdomainRegistrar.sol",
        "file": "./EthRegistrarSubdomainRegistrar.sol",
        "id": 310,
        "nodeType": "ImportDirective",
        "scope": 392,
        "sourceUnit": 1015,
        "src": "88:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 311,
              "name": "EthRegistrarSubdomainRegistrar",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1014,
              "src": "1547:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthRegistrarSubdomainRegistrar_$1014",
                "typeString": "contract EthRegistrarSubdomainRegistrar"
              }
            },
            "id": 312,
            "nodeType": "InheritanceSpecifier",
            "src": "1547:30:1"
          }
        ],
        "contractDependencies": [
          306,
          1014,
          1159
        ],
        "contractKind": "contract",
        "documentation": "@dev Implements an ENS registrar that sells subdomains on behalf of their owners.\n * Users may register a subdomain by calling `register` with the name of the domain\nthey wish to register under, and the label hash of the subdomain they want to\nregister. They must also specify the new owner of the domain, and the referrer,\nwho is paid an optional finder's fee. The registrar then configures a simple\ndefault resolver, which resolves `addr` lookups to the new owner, and sets\nthe `owner` account as the owner of the subdomain in ENS.\n * New domains may be added by calling `configureDomain`, then transferring\nownership in the ENS registry to this contract. Ownership in the contract\nmay be transferred using `transfer`, and a domain may be unlisted for sale\nusing `unlistDomain`. There is (deliberately) no way to recover ownership\nin ENS once the name is transferred to this registrar.\n * Critically, this contract does not check one key property of a listed domain:\n * - Is the name UTS46 normalised?\n * User applications MUST check these two elements for each domain before\noffering them to users for registration.\n * Applications should additionally check that the domains they are offering to\nregister are controlled by this registrar, since calls to `register` will\nfail if this is not the case.",
        "fullyImplemented": true,
        "id": 391,
        "linearizedBaseContracts": [
          391,
          1014,
          306,
          1159
        ],
        "name": "ENSMigrationSubdomainRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "1649:3:1",
              "statements": []
            },
            "documentation": null,
            "id": 321,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 317,
                    "name": "ens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 314,
                    "src": "1637:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2616",
                      "typeString": "contract ENS"
                    }
                  }
                ],
                "id": 318,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 316,
                  "name": "EthRegistrarSubdomainRegistrar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1014,
                  "src": "1606:30:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_EthRegistrarSubdomainRegistrar_$1014_$",
                    "typeString": "type(contract EthRegistrarSubdomainRegistrar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1606:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "ens",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "1597:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ENS_$2616",
                    "typeString": "contract ENS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 313,
                    "name": "ENS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2616,
                    "src": "1597:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ENS_$2616",
                      "typeString": "contract ENS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:9:1"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:1"
            },
            "scope": 391,
            "src": "1585:67:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "1722:344:1",
              "statements": [
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "name": "subnode",
                      "nodeType": "VariableDeclaration",
                      "scope": 373,
                      "src": "1732:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1732:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "1777:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 334,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "1783:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6897,
                            "src": "1760:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1760:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1760:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 330,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6904,
                      "src": "1750:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:58:1"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "name": "previous",
                      "nodeType": "VariableDeclaration",
                      "scope": 373,
                      "src": "1800:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 342,
                        "name": "subnode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1829:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1819:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2616",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2585,
                      "src": "1819:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1916:21:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 347,
                                "name": "previous",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1928:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 346,
                              "name": "isContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "1917:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) returns (bool)"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1917:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6910,
                              "src": "1941:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1941:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 352,
                            "name": "previous",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "1955:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1941:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1916:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6913,
                        6914
                      ],
                      "referencedDeclaration": 6913,
                      "src": "1908:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "1996:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2002:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "previous",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "2009:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "2032:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 363,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2019:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$2616",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2592,
                          "src": "2019:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2019:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 369,
                            "name": "subnode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "2050:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2042:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ENS_$2616",
                              "typeString": "contract ENS"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ttl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2599,
                          "src": "2042:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint64_$",
                            "typeString": "function (bytes32) view external returns (uint64)"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2042:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "ens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1975:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$2616",
                          "typeString": "contract ENS"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSubnodeRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "1975:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,address,uint64) external"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:84:1"
                }
              ]
            },
            "documentation": null,
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateSubdomain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "1684:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "1698:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:29:1"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:1"
            },
            "scope": 391,
            "src": "1658:408:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "2129:98:1",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "2139:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:9:1"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 382,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2169:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 376,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2189:4:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 384,
                  "nodeType": "InlineAssembly",
                  "operations": "{ size := extcodesize(addr) }",
                  "src": "2158:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 385,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "2212:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2219:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2212:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 380,
                  "id": 388,
                  "nodeType": "Return",
                  "src": "2205:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2092:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2091:14:1"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2123:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:6:1"
            },
            "scope": 391,
            "src": "2072:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 392,
        "src": "1504:725:1"
      }
    ],
    "src": "0:2230:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-01-30T08:26:27.952Z",
  "devdoc": {
    "details": "Implements an ENS registrar that sells subdomains on behalf of their owners. * Users may register a subdomain by calling `register` with the name of the domain they wish to register under, and the label hash of the subdomain they want to register. They must also specify the new owner of the domain, and the referrer, who is paid an optional finder's fee. The registrar then configures a simple default resolver, which resolves `addr` lookups to the new owner, and sets the `owner` account as the owner of the subdomain in ENS. * New domains may be added by calling `configureDomain`, then transferring ownership in the ENS registry to this contract. Ownership in the contract may be transferred using `transfer`, and a domain may be unlisted for sale using `unlistDomain`. There is (deliberately) no way to recover ownership in ENS once the name is transferred to this registrar. * Critically, this contract does not check one key property of a listed domain: * - Is the name UTS46 normalised? * User applications MUST check these two elements for each domain before offering them to users for registration. * Applications should additionally check that the domains they are offering to register are controlled by this registrar, since calls to `register` will fail if this is not the case.",
    "methods": {
      "configureDomain(string,uint256,uint256)": {
        "details": "Configures a domain for sale.",
        "params": {
          "name": "The name to configure.",
          "price": "The price in wei to charge for subdomain registrations",
          "referralFeePPM": "The referral fee to offer, in parts per million"
        }
      },
      "configureDomainFor(string,uint256,uint256,address,address)": {
        "details": "Configures a domain, optionally transferring it to a new owner.",
        "params": {
          "_owner": "The address to assign ownership of this domain to.",
          "_transfer": "The address to set as the transfer address for the name       when the permanent registrar is replaced. Can only be set to a non-zero       value once.",
          "name": "The name to configure.",
          "price": "The price in wei to charge for subdomain registrations.",
          "referralFeePPM": "The referral fee to offer, in parts per million."
        }
      },
      "migrate(string)": {
        "details": "Migrates the domain to a new registrar.",
        "params": {
          "name": "The name of the domain to migrate."
        }
      },
      "owner(bytes32)": {
        "details": "owner returns the address of the account that controls a domain.     Initially this is a null address. If the name has been     transferred to this contract, then the internal mapping is consulted     to determine who controls it. If the owner is not set,     the owner of the domain in the Registrar is returned.",
        "params": {
          "label": "The label hash of the deed to check."
        },
        "return": "The address owning the deed."
      },
      "query(bytes32,string)": {
        "details": "Returns information about a subdomain.",
        "params": {
          "label": "The label hash for the domain.",
          "subdomain": "The label for the subdomain."
        },
        "return": "domain The name of the domain, or an empty string if the subdomain               is unavailable.price The price to register a subdomain, in wei.rent The rent to retain a subdomain, in wei per second.referralFeePPM The referral fee for the dapp, in ppm."
      },
      "register(bytes32,string,address,address,address)": {
        "details": "Registers a subdomain.",
        "params": {
          "_subdomainOwner": "The account that should own the newly configured subdomain.",
          "label": "The label hash of the domain to register a subdomain of.",
          "referrer": "The address of the account to receive the referral fee.",
          "subdomain": "The desired subdomain label."
        }
      },
      "setMigrationAddress(address)": {
        "details": "Sets the address where domains are migrated to.",
        "params": {
          "_migration": "Address of the new registrar."
        }
      },
      "setResolver(string,address)": {
        "details": "Sets the resolver record for a name in ENS.",
        "params": {
          "name": "The name to set the resolver for.",
          "resolver": "The address of the resolver"
        }
      },
      "stop()": {
        "details": "Stops the registrar, disabling configuring of new domains."
      },
      "transfer(string,address)": {
        "details": "Transfers internal control of a name to a new account. Does not update     ENS.",
        "params": {
          "name": "The name to transfer.",
          "newOwner": "The address of the new owner."
        }
      },
      "unlistDomain(string)": {
        "details": "Unlists a domain May only be called by the owner.",
        "params": {
          "name": "The name of the domain to unlist."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}